syntax = "proto3";

option go_package = "github.com/noncepad/solpipe-market/go/proto/bot";

package bot;

message Empty {}

service Bot {
  // Upload a bot. If more than N bots exist, the oldest one will be overwritten and deleted.
  rpc Upload(stream BotUploadRequest) returns (BotStatus) {}
  // Get a list of currently uploaded bots. There is a limit of N.
  rpc GetStatus(Empty) returns (StatusResponse) {}
  // The bot must have already been uploaded.  The Bot is frozen upon disconnect.
  rpc Run(stream BotIn) returns (stream BotOut) {}
}

message BotUploadRequest {
  oneof payload {
    BotHeader header = 1;
    BotBody body = 2;
  }
}

message BotHeader {
  // this is a sha256 sum of the wasm body.
  bytes hash = 1;
  // make the size as 0 when there is no bot being stored in the validator.
  uint32 size = 2;
  repeated string args = 3;
}
message BotBody { bytes data = 1; }

message StatusResponse {
  repeated BotStatus list = 1;
}

message BotStatus{
  BotHeader header = 1;
  bool is_running = 2;
}



message BotIn{
  oneof in {
    bytes stdin = 1; 
  }
}

message BotOut {
  oneof out {
    bytes stdout = 1;
    bytes stderr = 2;
    // a private key with this public key has been generated by the wasm bot
    bytes keypair_pubkey = 3;
  }
}

